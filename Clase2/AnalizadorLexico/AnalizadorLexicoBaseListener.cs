//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAnalizadorLexicoListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AnalizadorLexicoBaseListener : IAnalizadorLexicoListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInicio([NotNull] AnalizadorLexicoParser.InicioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInicio([NotNull] AnalizadorLexicoParser.InicioContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.listainstrucciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListainstrucciones([NotNull] AnalizadorLexicoParser.ListainstruccionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.listainstrucciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListainstrucciones([NotNull] AnalizadorLexicoParser.ListainstruccionesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] AnalizadorLexicoParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] AnalizadorLexicoParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.variables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTipo([NotNull] AnalizadorLexicoParser.TipoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTipo([NotNull] AnalizadorLexicoParser.TipoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
